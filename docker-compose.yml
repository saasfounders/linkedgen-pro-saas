version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: linkedgen-postgres
    environment:
      POSTGRES_DB: linkedgen_pro
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - linkedgen-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: linkedgen-backend
    environment:
      NODE_ENV: development
      PORT: 8000
      DATABASE_URL: postgresql://postgres:password@postgres:5432/linkedgen_pro
      JWT_SECRET: your-super-secret-jwt-key-development
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      APOLLO_API_KEY: ${APOLLO_API_KEY}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - linkedgen-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: linkedgen-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - linkedgen-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  linkedgen-network:
    driver: bridge 